<!--
@version 3.2.0.1
-->
<!--
	수정일                 수정자                          수정내용
  =========     =======    =================================================
  2011.09.07   	서준식     	 	로그인 체크 인터셉터 추가
  2011.09.29	이기하			에러페이지 경로수정
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	
	
	<!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
	<context:component-scan base-package="egovframework, jnit, jnitext, example, geocni">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
		<context:exclude-filter expression="org.springframework.stereotype.Service" type="annotation"/>
		<context:exclude-filter expression="org.springframework.stereotype.Repository" type="annotation"/>
	</context:component-scan>


	<!-- For Pagination Tag -->
	<bean class="egovframework.com.cmm.ImagePaginationRenderer" id="imageRenderer"/>
	<bean id="jnitRenderer" class="jnit.cms.JnitPaginationRenderer"/>
	<bean id="jnit2Renderer" class="jnit.cms.Jnit2PaginationRenderer"/>
	<bean id="jnit3Renderer" class="jnit.cms.Jnit3PaginationRenderer"/>
	<bean id="jnitBoardRenderer" class="jnit.cms.JnitBoardPaginationRenderer"/>
	<bean id="jnitDefaultRenderer" class="jnit.cms.JnitDefaultPaginationRenderer"/>
	<bean id="travelFrontPaginationRenderer" class="geocni.utils.TravelFrontPaginationRenderer"/>
	<bean id="travelBoardPaginationRenderer" class="geocni.utils.TravelBoardPaginationRenderer"/>
	<bean class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager" id="paginationManager">
		<property name="rendererType">
			<map>
				<entry key="image" value-ref="imageRenderer"/>
				<entry key="jnit" value-ref="jnitRenderer"/>
				<entry key="jnit2" value-ref="jnit2Renderer"/>
				<entry key="jnit3" value-ref="jnit3Renderer"/>
				<entry key="jnitBoard" value-ref="jnitBoardRenderer"/>
				<entry key="jnitDefault" value-ref="jnitDefaultRenderer"/>
				<entry key="travelFront" value-ref="travelFrontPaginationRenderer"/>
				<entry key="travelBoard" value-ref="travelBoardPaginationRenderer"/>
			</map>
		</property>
	</bean>

	<!--
		- The form-based controllers within this application provide @RequestMapping
		- annotations at the type level for path mapping URLs and @RequestMapping
		- at the method level for request type mappings (e.g., GET and POST).
		- In contrast, ClinicController - which is not form-based - provides
		- @RequestMapping only at the method level for path mapping URLs.
		-
		- DefaultAnnotationHandlerMapping is driven by these annotations and is
		- enabled by default with Java 5+.
	-->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="egovframework.com.cmm.web.EgovBindingInitializer"/>
		</property>
		<property name="customArgumentResolvers">
			<list>
				<bean class="egovframework.rte.ptl.mvc.bind.CommandMapArgumentResolver"/>
			</list>
		</property>
		<property name="alwaysUseFullPath" value="true" />
	</bean>

	<!-- 로그인 체크가 필요한 URL과 로그인 여부를 체크해줄 인터셉터를 등록한다. -->
	<bean id="selectAnnotaionMapper" class="egovframework.rte.ptl.mvc.handler.SimpleUrlAnnotationHandlerMapping" p:order="1">
		<property name="interceptors">
			<list>
				<ref bean="authenticInterceptor" />
			</list>
		</property>
		<!-- 로그인 체크가 필요한 URL 리스트  -->
		<property name="urls">
			<set>
				<value>/cms/**/*.do</value>
				<value>/rsv/sub*/*.do</value>
				<value>/cult/sub*/*.do</value>
				<value>/gis/sub*/*.do</value>
				<value>/guide/sub*/*.do</value>
				<value>/guide/sub*/*.do</value>
				<value>/menu/sub*/*.do</value>
			</set>
		</property>
	</bean>
	
	<!-- 로그인 체크 인터셉터 -->
	<bean id="authenticInterceptor" class="egovframework.com.cmm.interceptor.AuthenticInterceptor">
	<!-- 인증 체크가 필요 없는 URL 리스트  -->
		<property name="permittedURL">
			<set>
				<value>/uat/uia/[a-zA-Z]+\.do</value>
				<value>/EgovLeft.do</value>
				<value>/uat/uia/actionLogin.do</value>
				<value>/exeLogin.do</value>
				<value>/cms/login.do</value>
				<value>/cms/getFile.do</value>
				<value>/cms/getYsFile.do</value>
			</set>
		</property>
		<!-- 관리자 접근 URL 패턴 -->
		<property name="adminURL">
			<set>
				<value>/cms/</value>
				<value>/rsv/sub</value>
				<value>/cult/sub</value>
				<value>/gis/sub</value>
				<value>/guide/sub</value>
				<value>/guide/sub</value>
				<value>/menu/sub</value>
			</set>
		</property>
		<!-- 관리자 로그인 화면 -->
		<property name="adminLoginURL">
			<value>/cms/login.do</value>
		</property>
		<!-- 사용자 로그인 화면 -->
		<property name="userLoginURL">
			<value>/total_login/</value>
		</property>
	</bean>
	  
	<!-- <bean id="annotationMapper"
	  class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"
	  p:order="2" /> -->
	<bean id="annotationMapper"
	  class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"
	  p:order="2"
	  p:alwaysUseFullPath="true" />

	
	<!--
		- This bean resolves specific types of exceptions to corresponding logical
		- view names for error views. The default behaviour of DispatcherServlet
		- is to propagate all exceptions to the servlet container: this will happen
		- here with all other types of exceptions.
	-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="egovframework/com/cmm/error/egovError"/>
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">egovframework/com/cmm/error/dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">egovframework/com/cmm/error/dataAccessFailure</prop>
				<prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">egovframework/com/cmm/error/egovBizException</prop>
				<prop key="org.springframework.web.HttpSessionRequiredException">egovframework/com/uat/uia/EgovLoginUsr</prop>
			</props>
		</property>
	</bean>
	<!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"
    p:order="1"/>
    <bean id="jsonView" name="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!--
		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "vets"
		- will be mapped to "/WEB-INF/jsp/vets.jsp".
	-->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="2" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.JstlView"/>

	<!--
		- Message source for this context, loaded from localized "messages_xx" files.
		- Could also reside in the root application context, as it is generic,
		- but is currently just used within Application's web tier.
	-->
	
	<mvc:annotation-driven>
	   <mvc:message-converters>
	       <!-- @ResponseBody로 String 처리할때 한글처리 -->
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <property name="supportedMediaTypes">
	                <list>
	                    <value>text/html;charset=UTF-8</value>
	                </list>
	            </property>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>

	
	<!-- bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="messages/message-common"/ -->
	<bean name="messageSource" 
      class="org.springframework.context.support.ResourceBundleMessageSource">
	   <property name="useCodeAsDefaultMessage">
	      <value>true</value>
	   </property>
	   <property name="basenames">
	      <list>
	         <value>messages/message-common</value>
	      </list>
	   </property>
	</bean> 
</beans>