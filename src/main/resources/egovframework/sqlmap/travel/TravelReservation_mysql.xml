<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="travelReservationDAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="travelReservationVO" type="geocni.travel.route.domain.TravelReservation" />
	<typeAlias alias="travelFiles" type="geocni.travel.common.files.domain.TravelFiles" />

	<resultMap id="travelReservationMin" class="geocni.travel.route.domain.TravelReservation">
		<result property="reseBeachId" column="rese_beach_id" />
		<result property="reseBeachRegionCd" column="rese_beach_region_cd" />
		<result property="reseBeachNameCd" column="rese_beach_name_cd" />
		<result property="reseBeachRegion" column="rese_beach_region" />
		<result property="reseBeachName" column="rese_beach_name" />
		<result property="reseBeachMax" column="rese_beach_max" />
		<result property="useYn" column="use_yn" />
		<result property="reseNo" column="rese_no" />
		<result property="reseDate" column="rese_date" />
		<result property="reseTime" column="rese_time" />
		<result property="resePersonnel" column="rese_personnel" />
		<result property="reseName" column="rese_name" />
		<result property="reseTel" column="rese_tel" />
		<result property="reservationYn" column="rese_tel" />
	</resultMap>

	<select id="travelReservationDAO.selectTravelReservationRegionList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		<![CDATA[
			SELECT DISTINCT
			    rese_beach_region_cd AS reseBeachRegionCd,
			    rese_beach_region AS reseBeachRegion
			FROM
			    geo_reservation_info
			WHERE
			    use_yn = 'Y'
			ORDER BY rese_beach_region
		]]>
	</select>

	<select id="travelReservationDAO.selectTravelReservationBeachList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
			SELECT DISTINCT
			    rese_beach_region_cd AS reseBeachRegionCd,
			    rese_beach_region AS reseBeachRegion,
			    rese_beach_name_cd AS reseBeachNameCd,
			    rese_beach_name AS reseBeachName
			FROM
			    geo_reservation_info
			WHERE
			    use_yn = 'Y'
			ORDER BY rese_beach_region, rese_beach_name
	</select>

	<select id="travelReservationDAO.selectTravelOpenYn" parameterClass="travelReservationVO" resultClass="String">
		SELECT 
		    CASE
		        WHEN COUNT(*) = 1 THEN 'Y'
		        ELSE 'N'
		    END AS openYn
		FROM
		    geo_reservation_info
		WHERE
		    use_yn = 'Y'
		        AND RESE_BEACH_ID = #reseBeachId#
		        AND #reseDate# BETWEEN START_DATE AND END_DATE
	</select>

	<select id="travelReservationDAO.selectTravelReservationYn" parameterClass="travelReservationVO" resultClass="String">
		SELECT 
		    CASE
		        WHEN IFNULL(SUM(geo_reservation.RESE_PERSONNEL), 0) <isNotEmpty property="resePersonnel">+ $resePersonnel$</isNotEmpty> <![CDATA[>]]> (select RESE_BEACH_MAX from geo_reservation_info where RESE_BEACH_ID = #reseBeachId#) THEN 'N'
		        ELSE 'Y'
		    END AS reservationYn
		FROM
		    geo_reservation_info,
		    geo_reservation
		WHERE
		    geo_reservation_info.RESE_BEACH_ID = geo_reservation.RESE_BEACH_ID
		        AND geo_reservation_info.use_yn = 'Y'
		        AND geo_reservation.RESE_BEACH_ID = #reseBeachId#
		        AND geo_reservation.RESE_DATE = #reseDate#
		        AND geo_reservation.RESE_TIME = #reseTime#
	</select>

	<select id="travelReservationDAO.selectTravelReservationPossCnt" parameterClass="travelReservationVO" resultClass="String">
		SELECT 
		    RESE_BEACH_MAX - IFNULL((SELECT 
		                    SUM(RESE_PERSONNEL)
		                FROM
		                    (SELECT 
		                        RESE_PERSONNEL
		                    FROM
		                        geo_reservation
		                    WHERE
		                        RESE_BEACH_ID = #reseBeachId#
		                            AND RESE_DATE = #reseDate#
		                            AND rese_time = #reseTime#) tmp), 0) AS reseAvaiCnt
		FROM
		    geo_reservation_info
		WHERE
		    use_yn = 'Y'
		        AND RESE_BEACH_ID = #reseBeachId#
	</select>

	<select id="travelReservationDAO.selectTravelReservationDuplYn" parameterClass="travelReservationVO" resultClass="String">
		SELECT 
		    CASE
		        WHEN COUNT(*) <![CDATA[>]]> 0 THEN 'N'
		        ELSE 'Y'
		    END AS duplicationYn
		FROM
		    geo_reservation
		WHERE
		    RESE_BEACH_ID = #reseBeachId#
		        AND RESE_DATE = #reseDate#
		        AND RESE_TIME = #reseTime#
		        AND RESE_NAME = #reseName#
		        AND RESE_TEL = #reseTel#
	</select>
	
	<insert id="travelReservationDAO.insertTravelReservation">
		<![CDATA[
			INSERT INTO geo_reservation ( 
				  rese_no
				, rese_beach_id
				, rese_date
				, rese_time
				, rese_personnel
				, rese_name
				, rese_tel
				, rese_reg_date
				, rese_area_cd
			) VALUES ( 
				  concat(#reseBeachId#, #reseDate#, #reseTime#, IFNULL(lpad(substr((select max(rese_no) from (select rese_no from geo_reservation where rese_beach_id = #reseBeachId# and rese_date = #reseDate# and rese_time = #reseTime#) tmp), 16)+1, 5, '0'), '00001'))
				, #reseBeachId#
				, #reseDate#
				, #reseTime#
				, #resePersonnel#
				, TRIM(#reseName#)
				, TRIM(#reseTel#)
				, NOW()
				, #reseAreaCd_2#
			)
		]]>
	</insert>
	
	<delete id="travelReservationDAO.deleteTravelReservation">
	    <![CDATA[
			DELETE FROM geo_reservation
            WHERE rese_no = #reseNo#
		]]>
	</delete>

	<select id="travelReservationDAO.selectTravelReservationViewList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		<![CDATA[
			SELECT 
			    rese_no AS reseNo,
			    (SELECT 
			            CONCAT(rese_beach_region,
			                        ' / ',
			                        rese_beach_name)
			        FROM
			            geo_reservation_info
			        WHERE
			            rese_beach_id = geo_reservation.rese_beach_id) AS reseBeachName,
			    rese_date AS reseDate,
			    rese_time AS reseTime,
			    rese_personnel AS resePersonnel,
			    rese_name AS reseName,
			    rese_tel AS reseTel,
			    rese_area_cd AS reseAreaCd,
		    	rese_reg_date AS reseRegDate,
			    (SELECT case when geo_reservation.rese_area_cd = '0800' then p_cd_nm 
			            else concat(p_cd_nm, ' ', cd_nm) end 
			     FROM fipa_area_code WHERE use_yn = 'Y' AND code = geo_reservation.rese_area_cd) AS reseAreaName
			FROM
			    geo_reservation
			WHERE
			    RESE_NAME = #reseName#
			        AND rese_tel = #reseTel#
		]]>
	</select>

	<select id="travelReservationDAO.selectTravelReservationAdmin" parameterClass="travelReservationVO" resultClass="String">
		SELECT 
		    rese_beach_id
		FROM
		    geo_reservation_admin
		WHERE
		    RESE_ADMIN_ID = #reseAdminId#
		        AND RESE_ADMIN_PW = #reseAdminPw#
	</select>

	<select id="travelReservationDAO.selectTravelReservationList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		SELECT 
		    rese_no AS reseNo,
		    (SELECT 
		            CONCAT(rese_beach_region,
		                        ' / ',
		                        rese_beach_name)
		        FROM
		            geo_reservation_info
		        WHERE
		            rese_beach_id = geo_reservation.rese_beach_id) AS reseBeachName,
		    rese_date AS reseDate,
		    rese_time AS reseTime,
		    rese_personnel AS resePersonnel,
		    rese_name AS reseName,
		    rese_tel AS reseTel,
		    rese_area_cd AS reseAreaCd,
		    rese_reg_date AS reseRegDate,
		    (SELECT case when geo_reservation.rese_area_cd = '0800' then p_cd_nm 
		            else concat(p_cd_nm, ' ', cd_nm) end 
		     FROM fipa_area_code WHERE use_yn = 'Y' AND code = geo_reservation.rese_area_cd) AS reseAreaName
		FROM
		    geo_reservation
		WHERE
		<isEqual property="reseBeachId" compareValue="R0000">
		    1=1
		</isEqual>
		<isNotEqual property="reseBeachId" compareValue="R0000">
		    RESE_BEACH_ID = #reseBeachId#
		</isNotEqual>
		<isNotEmpty property="searchKeyword">
			<isEqual property="searchCondition" compareValue="0">
		        AND RESE_NAME LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
			<isEqual property="searchCondition" compareValue="1">
		        AND RESE_TEL LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
			<isEqual property="searchCondition" compareValue="2">
		        AND RESE_NO LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
		</isNotEmpty>
		ORDER BY reseBeachName, reseDate, reseName, reseTel, reseTime
		<isNotEqual property="isExcelDown" compareValue="Y">
		LIMIT #firstIndex#, #recordCountPerPage#
		</isNotEqual>
	</select>
	
	<select id="travelReservationDAO.selectBeachManagementList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		select *,
		 (select concat(substring(etl_dt, 1, 4), '-', substring(etl_dt, 5, 2), '-', substring(etl_dt, 7, 2), ' ', substring(etl_dt, 9, 2), ':', substring(etl_dt, 11, 2)) 
		    from geo_beach_congestion 
		   where etl_dt between concat(DATE_FORMAT(date_add(now(),INTERVAL -1 DAY),'%Y%m%d'),'1900')
		     and concat(DATE_FORMAT(now(),'%Y%m%d'),'1830') 
		     and seq_id = a.seq_id 
		     and uniq_pop = a.max_uniq_pop      
		order by etl_dt desc limit 1) as max_time
		from(
		select seq_id     
			, min(poi_nm) as poi_nm  
			, max(uniq_pop) as max_uniq_pop   
		from geo_beach_congestion 
		where etl_dt between concat(DATE_FORMAT(date_add(now(),INTERVAL -1 DAY),'%Y%m%d'),'1900') and concat(DATE_FORMAT(now(),'%Y%m%d'),'1830')
		group by seq_id) a;
	</select>
	
	<select id="travelReservationDAO.selectBeachTimeList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		select seq_id, min(poi_nm) as poi_nm
			, sum(case when a.etl_dt = '0000' then a.uniq_pop else 0 end) as time0000
			, sum(case when a.etl_dt = '0030' then a.uniq_pop else 0 end) as time0030
			, sum(case when a.etl_dt = '0100' then a.uniq_pop else 0 end) as time0100
			, sum(case when a.etl_dt = '0130' then a.uniq_pop else 0 end) as time0130
			, sum(case when a.etl_dt = '0200' then a.uniq_pop else 0 end) as time0200
			, sum(case when a.etl_dt = '0230' then a.uniq_pop else 0 end) as time0230
			, sum(case when a.etl_dt = '0300' then a.uniq_pop else 0 end) as time0300
			, sum(case when a.etl_dt = '0330' then a.uniq_pop else 0 end) as time0330
			, sum(case when a.etl_dt = '0400' then a.uniq_pop else 0 end) as time0400
			, sum(case when a.etl_dt = '0430' then a.uniq_pop else 0 end) as time0430
			, sum(case when a.etl_dt = '0500' then a.uniq_pop else 0 end) as time0500
			, sum(case when a.etl_dt = '0530' then a.uniq_pop else 0 end) as time0530
			, sum(case when a.etl_dt = '0600' then a.uniq_pop else 0 end) as time0600
			, sum(case when a.etl_dt = '0630' then a.uniq_pop else 0 end) as time0630
			, sum(case when a.etl_dt = '0700' then a.uniq_pop else 0 end) as time0700
			, sum(case when a.etl_dt = '0730' then a.uniq_pop else 0 end) as time0730
			, sum(case when a.etl_dt = '0800' then a.uniq_pop else 0 end) as time0800
			, sum(case when a.etl_dt = '0830' then a.uniq_pop else 0 end) as time0830
			, sum(case when a.etl_dt = '0900' then a.uniq_pop else 0 end) as time0900
			, sum(case when a.etl_dt = '0930' then a.uniq_pop else 0 end) as time0930
			, sum(case when a.etl_dt = '1000' then a.uniq_pop else 0 end) as time1000
			, sum(case when a.etl_dt = '1030' then a.uniq_pop else 0 end) as time1030
			, sum(case when a.etl_dt = '1100' then a.uniq_pop else 0 end) as time1100
			, sum(case when a.etl_dt = '1130' then a.uniq_pop else 0 end) as time1130
			, sum(case when a.etl_dt = '1200' then a.uniq_pop else 0 end) as time1200
			, sum(case when a.etl_dt = '1230' then a.uniq_pop else 0 end) as time1230
			, sum(case when a.etl_dt = '1300' then a.uniq_pop else 0 end) as time1300
			, sum(case when a.etl_dt = '1330' then a.uniq_pop else 0 end) as time1330
			, sum(case when a.etl_dt = '1400' then a.uniq_pop else 0 end) as time1400
			, sum(case when a.etl_dt = '1430' then a.uniq_pop else 0 end) as time1430
			, sum(case when a.etl_dt = '1500' then a.uniq_pop else 0 end) as time1500
			, sum(case when a.etl_dt = '1530' then a.uniq_pop else 0 end) as time1530
			, sum(case when a.etl_dt = '1600' then a.uniq_pop else 0 end) as time1600
			, sum(case when a.etl_dt = '1630' then a.uniq_pop else 0 end) as time1630
			, sum(case when a.etl_dt = '1700' then a.uniq_pop else 0 end) as time1700
			, sum(case when a.etl_dt = '1730' then a.uniq_pop else 0 end) as time1730
			, sum(case when a.etl_dt = '1800' then a.uniq_pop else 0 end) as time1800
			, sum(case when a.etl_dt = '1830' then a.uniq_pop else 0 end) as time1830
			, sum(case when a.etl_dt = '1900' then a.uniq_pop else 0 end) as time1900
			, sum(case when a.etl_dt = '1930' then a.uniq_pop else 0 end) as time1930
			, sum(case when a.etl_dt = '2000' then a.uniq_pop else 0 end) as time2000
			, sum(case when a.etl_dt = '2030' then a.uniq_pop else 0 end) as time2030
			, sum(case when a.etl_dt = '2100' then a.uniq_pop else 0 end) as time2100
			, sum(case when a.etl_dt = '2130' then a.uniq_pop else 0 end) as time2130
			, sum(case when a.etl_dt = '2200' then a.uniq_pop else 0 end) as time2200
			, sum(case when a.etl_dt = '2230' then a.uniq_pop else 0 end) as time2230
			, sum(case when a.etl_dt = '2300' then a.uniq_pop else 0 end) as time2300
			, sum(case when a.etl_dt = '2330' then a.uniq_pop else 0 end) as time2330
			from (select substr(etl_dt, 9, 4) as etl_dt, seq_id, poi_nm, uniq_pop
			from geo_beach_congestion
			where etl_dt like concat(#ssyear#,#ssmonth#,#ssdate#,'%')) a
			group by seq_id;
	</select>
	
	<select id="travelReservationDAO.selectTravelReservationListCnt" parameterClass="travelReservationVO" resultClass="int">
		SELECT 
			COUNT(*) totcnt
		FROM geo_reservation
		WHERE
		<isEqual property="reseBeachId" compareValue="R0000">
		    1=1
		</isEqual>
		<isNotEqual property="reseBeachId" compareValue="R0000">
		    RESE_BEACH_ID = #reseBeachId#
		</isNotEqual>
		<isNotEmpty property="searchKeyword">
			<isEqual property="searchCondition" compareValue="0">
		        AND RESE_NAME LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
			<isEqual property="searchCondition" compareValue="1">
		        AND RESE_TEL LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
			<isEqual property="searchCondition" compareValue="2">
		        AND RESE_NO LIKE concat('%', #searchKeyword#, '%')
			</isEqual>
		</isNotEmpty>
	</select>

	<select id="travelReservationDAO.selectTravelReservationAreaList" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		<![CDATA[
			SELECT CODE AS reseAreaCd, CD_NM AS reseAreaName
			FROM FIPA_AREA_CODE
			WHERE
			    USE_YN = 'Y'
			    AND P_CODE = 'AREA'
			    AND CODE != '00'
		]]>
	</select>

	<select id="travelReservationDAO.selectTravelReservationAreaList2" parameterClass="travelReservationVO" resultClass="travelReservationVO">
		<![CDATA[
			SELECT P_CODE AS reseAreaCd,
			       P_CD_NM AS reseAreaName,
			       CODE AS reseAreaCd_2,
			       CD_NM AS reseAreaName_2
			FROM FIPA_AREA_CODE
			WHERE P_CODE IN ('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17')
			AND SUBSTR(CODE, 3, 2) != '00'
			ORDER BY CODE
		]]>
	</select>
</sqlMap>
